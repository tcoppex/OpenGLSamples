# Makefile generated by XPJ for linux32
-include Makefile.custom
ProjectName = TextureArrayTerrain
TextureArrayTerrain_cppfiles   += ./../../es2-aurora/TextureArrayTerrain/TerrainGenerator.cpp
TextureArrayTerrain_cppfiles   += ./../../es2-aurora/TextureArrayTerrain/TerrainSim.cpp
TextureArrayTerrain_cppfiles   += ./../../es2-aurora/TextureArrayTerrain/TerrainSimRenderer.cpp
TextureArrayTerrain_cppfiles   += ./../../es2-aurora/TextureArrayTerrain/TerrainSimThread.cpp
TextureArrayTerrain_cppfiles   += ./../../es2-aurora/TextureArrayTerrain/TextureArrayTerrain.cpp

TextureArrayTerrain_cpp_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.debug.P, $(TextureArrayTerrain_cppfiles)))))
TextureArrayTerrain_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(TextureArrayTerrain_ccfiles)))))
TextureArrayTerrain_c_debug_dep      = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.debug.P, $(TextureArrayTerrain_cfiles)))))
TextureArrayTerrain_debug_dep      = $(TextureArrayTerrain_cpp_debug_dep) $(TextureArrayTerrain_cc_debug_dep) $(TextureArrayTerrain_c_debug_dep)
-include $(TextureArrayTerrain_debug_dep)
TextureArrayTerrain_cpp_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.release.P, $(TextureArrayTerrain_cppfiles)))))
TextureArrayTerrain_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(TextureArrayTerrain_ccfiles)))))
TextureArrayTerrain_c_release_dep      = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.release.P, $(TextureArrayTerrain_cfiles)))))
TextureArrayTerrain_release_dep      = $(TextureArrayTerrain_cpp_release_dep) $(TextureArrayTerrain_cc_release_dep) $(TextureArrayTerrain_c_release_dep)
-include $(TextureArrayTerrain_release_dep)
TextureArrayTerrain_debug_hpaths    := 
TextureArrayTerrain_debug_hpaths    += ./../../es2-aurora/TextureArrayTerrain
TextureArrayTerrain_debug_hpaths    += ./../../../extensions/include
TextureArrayTerrain_debug_hpaths    += ./../../../extensions/externals/include
TextureArrayTerrain_debug_hpaths    += ./../../../extensions/externals/include/GLFW
TextureArrayTerrain_debug_lpaths    := 
TextureArrayTerrain_debug_lpaths    += ./../../../extensions/externals/lib/linux32
TextureArrayTerrain_debug_lpaths    += ./../../../extensions/lib/linux32
TextureArrayTerrain_debug_lpaths    += ./../../../extensions/externals/lib/linux32
TextureArrayTerrain_debug_lpaths    += ./../../../extensions/lib/linux32
TextureArrayTerrain_debug_defines   := $(TextureArrayTerrain_custom_defines)
TextureArrayTerrain_debug_defines   += LINUX=1
TextureArrayTerrain_debug_defines   += GLEW_NO_GLU=1
TextureArrayTerrain_debug_defines   += _DEBUG
TextureArrayTerrain_debug_libraries := 
TextureArrayTerrain_debug_libraries += GL
TextureArrayTerrain_debug_libraries += GLU
TextureArrayTerrain_debug_libraries += GLEW
#TextureArrayTerrain_debug_libraries += glfw3
TextureArrayTerrain_debug_libraries += pthread
TextureArrayTerrain_debug_libraries += rt
TextureArrayTerrain_debug_libraries += dl
TextureArrayTerrain_debug_libraries += X11
TextureArrayTerrain_debug_libraries += Xrandr
TextureArrayTerrain_debug_libraries += Xxf86vm
TextureArrayTerrain_debug_libraries += Xi
TextureArrayTerrain_debug_libraries += HalfD
TextureArrayTerrain_debug_libraries += NvAppBaseD
TextureArrayTerrain_debug_libraries += NvAssetLoaderD
TextureArrayTerrain_debug_libraries += NvGamepadD
#TextureArrayTerrain_debug_libraries += NvGLUtilsD
TextureArrayTerrain_debug_libraries += NvModelD
TextureArrayTerrain_debug_libraries += NvUID NvGLUtilsD glfw3 
TextureArrayTerrain_debug_libraries += R3D
TextureArrayTerrain_debug_common_cflags	:= $(TextureArrayTerrain_custom_cflags)
TextureArrayTerrain_debug_common_cflags    += -MMD
TextureArrayTerrain_debug_common_cflags    += $(addprefix -D, $(TextureArrayTerrain_debug_defines))
TextureArrayTerrain_debug_common_cflags    += $(addprefix -I, $(TextureArrayTerrain_debug_hpaths))
TextureArrayTerrain_debug_common_cflags  += -m32
TextureArrayTerrain_debug_cflags	:= $(TextureArrayTerrain_debug_common_cflags)
TextureArrayTerrain_debug_cflags  += -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TextureArrayTerrain_debug_cflags  += -malign-double
TextureArrayTerrain_debug_cflags  += -g
TextureArrayTerrain_debug_cppflags	:= $(TextureArrayTerrain_debug_common_cflags)
TextureArrayTerrain_debug_cppflags  += -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TextureArrayTerrain_debug_cppflags  += -Wno-reorder
TextureArrayTerrain_debug_cppflags  += -malign-double
TextureArrayTerrain_debug_cppflags  += -g
TextureArrayTerrain_debug_lflags    := $(TextureArrayTerrain_custom_lflags)
TextureArrayTerrain_debug_lflags    += $(addprefix -L, $(TextureArrayTerrain_debug_lpaths))
TextureArrayTerrain_debug_lflags    += -Wl,--no-as-needed $(addprefix -l, $(TextureArrayTerrain_debug_libraries))
TextureArrayTerrain_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
TextureArrayTerrain_debug_lflags  += -m32
TextureArrayTerrain_debug_objsdir  = $(OBJS_DIR)/TextureArrayTerrain_debug
TextureArrayTerrain_debug_cpp_o    = $(addprefix $(TextureArrayTerrain_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(TextureArrayTerrain_cppfiles)))))
TextureArrayTerrain_debug_cc_o    = $(addprefix $(TextureArrayTerrain_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(TextureArrayTerrain_ccfiles)))))
TextureArrayTerrain_debug_c_o      = $(addprefix $(TextureArrayTerrain_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(TextureArrayTerrain_cfiles)))))
TextureArrayTerrain_debug_obj      = $(TextureArrayTerrain_debug_cpp_o) $(TextureArrayTerrain_debug_cc_o) $(TextureArrayTerrain_debug_c_o)
TextureArrayTerrain_debug_bin      := ./../../bin/linux32/TextureArrayTerrainD

clean_TextureArrayTerrain_debug: 
	$(SILENT_FLAG)$(ECHO) clean TextureArrayTerrain debug
	$(SILENT_FLAG)$(RMDIR) $(TextureArrayTerrain_debug_objsdir)
	$(SILENT_FLAG)$(RMDIR) $(TextureArrayTerrain_debug_bin)

build_TextureArrayTerrain_debug: postbuild_TextureArrayTerrain_debug
postbuild_TextureArrayTerrain_debug: mainbuild_TextureArrayTerrain_debug
mainbuild_TextureArrayTerrain_debug: prebuild_TextureArrayTerrain_debug $(TextureArrayTerrain_debug_bin)
prebuild_TextureArrayTerrain_debug:

$(TextureArrayTerrain_debug_bin): $(TextureArrayTerrain_debug_obj) build_Half_debug build_NvAppBase_debug build_NvAssetLoader_debug build_NvGamepad_debug build_NvGLUtils_debug build_NvModel_debug build_NvUI_debug build_R3_debug 
	$(SILENT_FLAG)mkdir -p `dirname ./../../bin/linux32/TextureArrayTerrainD`
	$(SILENT_FLAG)$(CCLD) $(TextureArrayTerrain_debug_obj) $(TextureArrayTerrain_debug_lflags) -o $(TextureArrayTerrain_debug_bin) 
	$(SILENT_FLAG)$(ECHO) building $@ complete!

TextureArrayTerrain_debug_DEPDIR = $(dir $(@))/$(*F)
$(TextureArrayTerrain_debug_cpp_o): $(TextureArrayTerrain_debug_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) TextureArrayTerrain: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(TextureArrayTerrain_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cppfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))))))
	$(SILENT_FLAG)cp $(TextureArrayTerrain_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(TextureArrayTerrain_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))))).debug.P; \
	  rm -f $(TextureArrayTerrain_debug_DEPDIR).d

$(TextureArrayTerrain_debug_cc_o): $(TextureArrayTerrain_debug_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) TextureArrayTerrain: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(TextureArrayTerrain_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_ccfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))))))
	$(SILENT_FLAG)cp $(TextureArrayTerrain_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(TextureArrayTerrain_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))))).debug.P; \
	  rm -f $(TextureArrayTerrain_debug_DEPDIR).d

$(TextureArrayTerrain_debug_c_o): $(TextureArrayTerrain_debug_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) TextureArrayTerrain: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CC) $(TextureArrayTerrain_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cfiles)) -o $@ 
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cfiles))))))
	$(SILENT_FLAG)cp $(TextureArrayTerrain_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(TextureArrayTerrain_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_debug_objsdir),, $@))), $(TextureArrayTerrain_cfiles))))).debug.P; \
	  rm -f $(TextureArrayTerrain_debug_DEPDIR).d

TextureArrayTerrain_release_hpaths    := 
TextureArrayTerrain_release_hpaths    += ./../../es2-aurora/TextureArrayTerrain
TextureArrayTerrain_release_hpaths    += ./../../../extensions/include
TextureArrayTerrain_release_hpaths    += ./../../../extensions/externals/include
TextureArrayTerrain_release_hpaths    += ./../../../extensions/externals/include/GLFW
TextureArrayTerrain_release_lpaths    := 
TextureArrayTerrain_release_lpaths    += ./../../../extensions/externals/lib/linux32
TextureArrayTerrain_release_lpaths    += ./../../../extensions/lib/linux32
TextureArrayTerrain_release_lpaths    += ./../../../extensions/externals/lib/linux32
TextureArrayTerrain_release_lpaths    += ./../../../extensions/lib/linux32
TextureArrayTerrain_release_defines   := $(TextureArrayTerrain_custom_defines)
TextureArrayTerrain_release_defines   += LINUX=1
TextureArrayTerrain_release_defines   += GLEW_NO_GLU=1
TextureArrayTerrain_release_defines   += NDEBUG
TextureArrayTerrain_release_libraries := 
TextureArrayTerrain_release_libraries += GL
TextureArrayTerrain_release_libraries += GLU
TextureArrayTerrain_release_libraries += GLEW
#TextureArrayTerrain_release_libraries += glfw3
TextureArrayTerrain_release_libraries += pthread
TextureArrayTerrain_release_libraries += rt
TextureArrayTerrain_release_libraries += dl
TextureArrayTerrain_release_libraries += X11
TextureArrayTerrain_release_libraries += Xrandr
TextureArrayTerrain_release_libraries += Xxf86vm
TextureArrayTerrain_release_libraries += Xi
TextureArrayTerrain_release_libraries += Half
TextureArrayTerrain_release_libraries += NvAppBase
TextureArrayTerrain_release_libraries += NvAssetLoader
TextureArrayTerrain_release_libraries += NvGamepad
#TextureArrayTerrain_release_libraries += NvGLUtils
TextureArrayTerrain_release_libraries += NvModel
TextureArrayTerrain_release_libraries += NvUI NvGLUtils glfw3 
TextureArrayTerrain_release_libraries += R3
TextureArrayTerrain_release_common_cflags	:= $(TextureArrayTerrain_custom_cflags)
TextureArrayTerrain_release_common_cflags    += -MMD
TextureArrayTerrain_release_common_cflags    += $(addprefix -D, $(TextureArrayTerrain_release_defines))
TextureArrayTerrain_release_common_cflags    += $(addprefix -I, $(TextureArrayTerrain_release_hpaths))
TextureArrayTerrain_release_common_cflags  += -m32
TextureArrayTerrain_release_cflags	:= $(TextureArrayTerrain_release_common_cflags)
TextureArrayTerrain_release_cflags  += -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TextureArrayTerrain_release_cflags  += -malign-double
TextureArrayTerrain_release_cflags  += -O2
TextureArrayTerrain_release_cppflags	:= $(TextureArrayTerrain_release_common_cflags)
TextureArrayTerrain_release_cppflags  += -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TextureArrayTerrain_release_cppflags  += -Wno-reorder
TextureArrayTerrain_release_cppflags  += -malign-double
TextureArrayTerrain_release_cppflags  += -O2
TextureArrayTerrain_release_lflags    := $(TextureArrayTerrain_custom_lflags)
TextureArrayTerrain_release_lflags    += $(addprefix -L, $(TextureArrayTerrain_release_lpaths))
TextureArrayTerrain_release_lflags    += -Wl,--no-as-needed $(addprefix -l, $(TextureArrayTerrain_release_libraries))
TextureArrayTerrain_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
TextureArrayTerrain_release_lflags  += -m32
TextureArrayTerrain_release_objsdir  = $(OBJS_DIR)/TextureArrayTerrain_release
TextureArrayTerrain_release_cpp_o    = $(addprefix $(TextureArrayTerrain_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(TextureArrayTerrain_cppfiles)))))
TextureArrayTerrain_release_cc_o    = $(addprefix $(TextureArrayTerrain_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(TextureArrayTerrain_ccfiles)))))
TextureArrayTerrain_release_c_o      = $(addprefix $(TextureArrayTerrain_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(TextureArrayTerrain_cfiles)))))
TextureArrayTerrain_release_obj      = $(TextureArrayTerrain_release_cpp_o) $(TextureArrayTerrain_release_cc_o) $(TextureArrayTerrain_release_c_o)
TextureArrayTerrain_release_bin      := ./../../bin/linux32/TextureArrayTerrain

clean_TextureArrayTerrain_release: 
	$(SILENT_FLAG)$(ECHO) clean TextureArrayTerrain release
	$(SILENT_FLAG)$(RMDIR) $(TextureArrayTerrain_release_objsdir)
	$(SILENT_FLAG)$(RMDIR) $(TextureArrayTerrain_release_bin)

build_TextureArrayTerrain_release: postbuild_TextureArrayTerrain_release
postbuild_TextureArrayTerrain_release: mainbuild_TextureArrayTerrain_release
mainbuild_TextureArrayTerrain_release: prebuild_TextureArrayTerrain_release $(TextureArrayTerrain_release_bin)
prebuild_TextureArrayTerrain_release:

$(TextureArrayTerrain_release_bin): $(TextureArrayTerrain_release_obj) build_Half_release build_NvAppBase_release build_NvAssetLoader_release build_NvGamepad_release build_NvGLUtils_release build_NvModel_release build_NvUI_release build_R3_release 
	$(SILENT_FLAG)mkdir -p `dirname ./../../bin/linux32/TextureArrayTerrain`
	$(SILENT_FLAG)$(CCLD) $(TextureArrayTerrain_release_obj) $(TextureArrayTerrain_release_lflags) -o $(TextureArrayTerrain_release_bin) 
	$(SILENT_FLAG)$(ECHO) building $@ complete!

TextureArrayTerrain_release_DEPDIR = $(dir $(@))/$(*F)
$(TextureArrayTerrain_release_cpp_o): $(TextureArrayTerrain_release_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) TextureArrayTerrain: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(TextureArrayTerrain_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cppfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))))))
	$(SILENT_FLAG)cp $(TextureArrayTerrain_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(TextureArrayTerrain_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cppfiles))))).release.P; \
	  rm -f $(TextureArrayTerrain_release_DEPDIR).d

$(TextureArrayTerrain_release_cc_o): $(TextureArrayTerrain_release_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) TextureArrayTerrain: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(TextureArrayTerrain_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_ccfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))))))
	$(SILENT_FLAG)cp $(TextureArrayTerrain_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(TextureArrayTerrain_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_ccfiles))))).release.P; \
	  rm -f $(TextureArrayTerrain_release_DEPDIR).d

$(TextureArrayTerrain_release_c_o): $(TextureArrayTerrain_release_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) TextureArrayTerrain: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CC) $(TextureArrayTerrain_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cfiles)) -o $@ 
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cfiles))))))
	$(SILENT_FLAG)cp $(TextureArrayTerrain_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(TextureArrayTerrain_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(TextureArrayTerrain_release_objsdir),, $@))), $(TextureArrayTerrain_cfiles))))).release.P; \
	  rm -f $(TextureArrayTerrain_release_DEPDIR).d

clean_TextureArrayTerrain:  clean_TextureArrayTerrain_debug clean_TextureArrayTerrain_release
	$(SILENT_FLAG)rm -rf $(DEPSDIR)
